services:

  identity.api:
    image: identity-api
    build:
      context: .
      dockerfile: Services/Identity.API/Dockerfile
    networks:
      - apis-network
  room.api:
    image: room-api
    build:
      context: .
      dockerfile: Services/Room.API/Dockerfile
    networks:
      - apis-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  tour.api:
    image: tour-api
    build:
      context: .
      dockerfile: Services/Tour.API/Dockerfile
    networks:
      - apis-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  booking.api:
    image: booking-api
    build: 
      context: .
      dockerfile: Services/Booking.API/Dockerfile
    networks:
      - apis-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  realtime.api:
    image: realtime-api
    build: 
      context: .
      dockerfile: Services/Realtime.API/Dockerfile
    networks:
      - apis-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  rabbitmq:
    container_name: rabbitmq-container
    image: rabbitmq:3-management-alpine
    networks:
      - apis-network
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  upload.api:
    image: upload-api
    build:
        context: .
        dockerfile: Services/Upload.API/Dockerfile
    networks:
      - apis-network  

  api_gateway:
    image: api-gateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
    depends_on:
      - identity.api
      - room.api
      - tour.api
      - booking.api
      - saga.api
      - realtime.api
    networks:
      - apis-network

  saga.api:
    image: saga-api
    build:
      context: .
      dockerfile: Saga.Orchestrator/Saga.Orchestrator/Dockerfile
    networks:
      - apis-network
networks:
  apis-network:
