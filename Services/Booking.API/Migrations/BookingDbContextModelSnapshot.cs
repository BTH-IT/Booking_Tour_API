// <auto-generated />
using System;
using Booking.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.API.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Booking.API.Entities.BookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

<<<<<<< HEAD
                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

=======
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<double>("PriceTotal")
                        .HasColumnType("double");

<<<<<<< HEAD
                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");
=======
                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a

                    b.HasKey("Id");

                    b.ToTable("BookingRooms");
                });

            modelBuilder.Entity("Booking.API.Entities.BookingTour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

<<<<<<< HEAD
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");
=======
                    b.Property<double>("Coupon")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCleaningFee")
                        .HasColumnType("tinyint(1)");
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a

                    b.Property<bool>("IsEntranceTicket")
                        .HasColumnType("tinyint(1)");

<<<<<<< HEAD
                    b.Property<bool>("IsLunch")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTip")
                        .HasColumnType("tinyint(1)");

=======
                    b.Property<bool>("IsTip")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
                    b.Property<double>("PriceTotal")
                        .HasColumnType("double");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

<<<<<<< HEAD
                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");
=======
                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a

                    b.Property<string>("Travellers")
                        .IsRequired()
                        .HasColumnType("JSON");

<<<<<<< HEAD
=======
                    b.Property<bool>("Umbrella")
                        .HasColumnType("tinyint(1)");

>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookingTours");
                });

            modelBuilder.Entity("Booking.API.Entities.DetailBookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("Children")
                        .HasColumnType("int");

<<<<<<< HEAD
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
=======
                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("DetailBookingRooms");
                });

            modelBuilder.Entity("Booking.API.Entities.TourBookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<int>("BookingTourId")
                        .HasColumnType("int");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("BookingId");

                    b.ToTable("DetailBookingRooms");
=======
                    b.HasIndex("BookingTourId");

                    b.ToTable("TourBookingRooms");
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
                });

            modelBuilder.Entity("Booking.API.Entities.DetailBookingRoom", b =>
                {
                    b.HasOne("Booking.API.Entities.BookingRoom", "BookingRoom")
                        .WithMany("DetailBookingRooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingRoom");
                });

<<<<<<< HEAD
=======
            modelBuilder.Entity("Booking.API.Entities.TourBookingRoom", b =>
                {
                    b.HasOne("Booking.API.Entities.BookingTour", "BookingTour")
                        .WithMany("TourBookingRooms")
                        .HasForeignKey("BookingTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingTour");
                });

>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
            modelBuilder.Entity("Booking.API.Entities.BookingRoom", b =>
                {
                    b.Navigation("DetailBookingRooms");
                });
<<<<<<< HEAD
=======

            modelBuilder.Entity("Booking.API.Entities.BookingTour", b =>
                {
                    b.Navigation("TourBookingRooms");
                });
>>>>>>> 8ea5293bc147863998b5331d4fd7eb2f4226a11a
#pragma warning restore 612, 618
        }
    }
}
